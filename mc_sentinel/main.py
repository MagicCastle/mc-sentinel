import sys

sys.path.append("../tinystatus")

from flask import Flask, Response, render_template_string, render_template
from prometheus_client import CONTENT_TYPE_LATEST, REGISTRY, generate_latest
from mc_sentinel.collector import SentinelCollector
from tinystatus.tinystatus import monitor_services, HTML_OUTPUT
from asgiref.wsgi import WsgiToAsgi
from hypercorn.config import Config
from hypercorn.asyncio import serve
import asyncio


async def main():
    app = Flask(__name__)

    REGISTRY.register(SentinelCollector())

    @app.route("/")
    def hello_world():
        return "<p>Hello World!</p>"

    @app.route("/metrics")
    def metrics():
        """
        This is the exporter that generate a report based of the latest metrics.
        """
        return Response(generate_latest(), mimetype=CONTENT_TYPE_LATEST)

    @app.route("/status")
    def status():
        """
        This loads the HTML file generated by TinyStatus
        """
        # print(f"HTML_OUTPUT: {HTML_OUTPUT}")
        return render_template("index.html")

    asgi_app = WsgiToAsgi(app)

    task1 = asyncio.create_task(serve(asgi_app, Config()))
    task2 = asyncio.create_task(monitor_services())

    await task2
    await task1


if __name__ == "__main__":
    asyncio.run(main())
